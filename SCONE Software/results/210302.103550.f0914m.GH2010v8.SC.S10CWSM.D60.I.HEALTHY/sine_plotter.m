

a1 = +0.310482; b1 = 3.1417; c1 = -1.779109;
a2 = +0.006469; b2 = 9.4295; c2 = -2.021154;
a3 = +0.111714; b3 = 6.2821; c3 = +2.535488;
a4 = 0; b4 = 0; c4 = 0;
a5 = 0; b5 = 0; c5 = 0;
a6 = 0; b6 = 0; c6 = 0;
a7 = 0; b7 = 0; c7 = 0;
a8 = 0; b8 = 0; c8 = 0;

original_period = 1/(b1/(2*pi));

for i = 1:1:original_period*1000
   t = i/1000;
   time(i) = t/2*100;
   sine_y(i) = a1*sin(b1*t+c1) + a2*sin(b2*t+c2) + a3*sin(b3*t+c3) + a4*sin(b4*t+c4) + a5*sin(b5*t+c5) + a6*sin(b6*t+c6) + a7*sin(b7*t+c7) + a8*sin(b8*t+c8);
end

%% PLOT
%figure();
%str = '#009900'; %green
%color_line = sscanf(str(2:end),'%2x%2x%2x',[1 3])/255;
%plot(time,30*sine_y,'color',color_line,'LineWidth',2);
str = '#009900';
color_free = sscanf(str(2:end),'%2x%2x%2x',[1 3])/255;

plot(time,sine_y*0.114795*75*1.2,'LineWidth',2,'color',color_free);
%plot(gait_r,polynomial_y) % right leg polynomial aproximation
%plot(gait_r,sine_y) % right leg polynomial aproximation
%legend('Healthy Gait Moment','Sinusoidal Fit')
xlabel('% gait cycle','fontsize',20)
ylabel('Actuator Torque(N·m)','fontsize',20)
set(gca,'FontSize',20)
legend('Experimental provided torque','Theoretical torque shape')
hold off



function [fitresult, gof] = poly_fit(gait_r, one_cycle_torque_r)
%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( gait_r, one_cycle_torque_r );

% Set up fittype and options.
ft = fittype( 'poly4' );

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft );
%{
% Plot fit with data.
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'one_cycle_torque_r vs. gait_r', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'gait_r', 'Interpreter', 'none' );
ylabel( 'one_cycle_torque_r', 'Interpreter', 'none' );
grid on
%}
end

function [fitresult, gof] = sine_fit(filtered_time_r, filtered_torque_r)
%CREATEFIT3(FILTERED_TIME_R,FILTERED_TORQUE_R)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : filtered_time_r
%      Y Output: filtered_torque_r
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Apr-2021 11:37:01


%% Fit: 'untitled fit 1'.
[xData, yData] = prepareCurveData( filtered_time_r, filtered_torque_r );

% Set up fittype and options.
ft = fittype( 'sin8' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf];
opts.StartPoint = [29.7887279344231 4.36164039835066 -2.22346467821143 14.1577567741483 8.72328079670132 2.22404982731221 6.8066107003031 0.0605783388659814 3.13963796118068 7.70650707332085 13.084921195052 1.05804922522836 6.68642426481538 17.4465615934026 1.06019481475258 6.44563210354092 34.8931231868053 0.852354886777799 4.87028699118765 30.5314827884546 1.79140652897109 3.90852317106897 39.2547635851559 0.0994008956954762];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
%{
figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
legend( h, 'filtered_torque_r vs. filtered_time_r', 'untitled fit 1', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'filtered_time_r', 'Interpreter', 'none' );
ylabel( 'filtered_torque_r', 'Interpreter', 'none' );
grid on
%}
end
