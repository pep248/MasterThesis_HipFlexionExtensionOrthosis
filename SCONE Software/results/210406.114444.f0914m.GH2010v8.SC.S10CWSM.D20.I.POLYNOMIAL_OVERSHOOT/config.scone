CmaOptimizer {
	signature_prefix = DATE_TIME
	init_file = "parameters/healthy_gait.par"
	use_init_file = true
	use_init_file_std = false
	max_generations = 3000
	SimulationObjective {
		max_duration = 20
		ModelOpenSim3 {
			model_file = "models/gait0914.osim"
			state_init_file = "states/initial_state.sto"
			initial_state_offset = "0~0.01<-0.5,0.5>"
			initial_state_offset_exclude = *_tx;*_ty;*_u
		}
		CompositeController {
			GaitStateController {
				signature_postfix = GH2010v8
				stance_load_threshold = "~0.1<0.001,1>"
				leg_load_sensor_delay = 0
				symmetric = 0
				ConditionalControllers {
					ConditionalController {
						states = "EarlyStance LateStance Liftoff Swing Landing"
						ReflexController {
							MuscleReflex {
								target = tib_ant
								delay = 0.020
								KL = "~1.1<-10,10>"
								L0 = "~0.71<0,2>"
							}
							MuscleReflex {
								target = tib_ant
								source = soleus
								delay = 0.020
								KF = "~-0.3<-10,10>"
							}
						}
					}
					ConditionalController {
						states = "EarlyStance LateStance Liftoff"
						ReflexController {
							MuscleReflex {
								target = soleus
								delay = 0.020
								KF = "~1.2<-10,10>"
							}
							MuscleReflex {
								target = gastroc
								delay = 0.020
								KF = "~1.1<-10,10>"
							}
						}
					}
					ConditionalController {
						states = "EarlyStance LateStance"
						ReflexController {
							Reflexes {
								ConditionalMuscleReflex {
									target = vasti
									delay = 0.010
									KF = "~1.15<-10,10>"
									C0 = "~0.09<-1,1>"
									dof = knee_angle
									pos_max = "~-0.175<-1,0>"
								}
								DofReflex {
									target = hamstrings
									source = pelvis_tilt
									delay = 0.005
									KP = "~1.91<-10,10>"
									KV = "~0.25<-10,10>"
									P0 = -0.105
									C0 = "~0.05<-1,1>"
								}
								DofReflex {
									target = glut_max
									source = pelvis_tilt
									delay = 0.005
									KP = "~1.91<-10,10>"
									KV = "~0.25<-10,10>"
									P0 = -0.105
									C0 = "~0.05<-1,1>"
								}
								DofReflex {
									target = iliopsoas
									source = pelvis_tilt
									delay = 0.005
									KP = "~-1.91<-10,10>"
									KV = "~-0.25<-10,10>"
									P0 = -0.105
									C0 = "~0.05<-1,1>"
								}
							}
						}
					}
					ConditionalController {
						states = Liftoff
						ReflexController {
							MuscleReflex {
								target = iliopsoas
								delay = 0.005
								C0 = "~0.25<-1,1>"
							}
							MuscleReflex {
								target = glut_max
								delay = 0.005
								C0 = "~-0.25<-1,1>"
							}
						}
					}
					ConditionalController {
						states = "Swing Landing"
						ReflexController {
							MuscleReflex {
								target = iliopsoas
								delay = 0.005
								KL = "~0.35<-10,10>"
								L0 = "~0.6<0,2>"
							}
							DofReflex {
								target = iliopsoas
								source = pelvis_tilt
								delay = 0.005
								KP = "~1.15<-10,10>"
								KV = "~0.25<-10,10>"
								P0 = "~-0.105<-1,1>"
							}
							MuscleReflex {
								target = iliopsoas
								source = hamstrings
								delay = 0.005
								KL = "~-4.0<-10,10>"
								L0 = "~0.85<0,2>"
							}
							MuscleReflex {
								target = hamstrings
								delay = 0.005
								KF = "~0.65<-10,10>"
							}
							MuscleReflex {
								target = glut_max
								delay = 0.005
								KF = "~0.4<-10,10>"
							}
						}
					}
				}
			}
			ScriptController {
				name = HipActuator
				period = 1.4016
				time_offset = "0.2~0.01<-1.5,1.5>"
				p0 = "10.87~0.1<0.87,20.87>"
				p1 = "-631.77~1<-731.77,-531.77>"
				p2 = "2115.45~10<1115.45,3115.45>"
				p3 = "-2190.76~10<-3190.76,-1190.76>"
				p4 = "711.35~1<611.35,811.35>"
				script_file = "controllers/hip_actuator_controller_3.lua"
			}
		}
		CompositeMeasure {
			CompositeMeasure {
				GaitMeasure {
					name = Gait
					weight = 100
					threshold = 0.05
					termination_height = 0.85
					min_velocity = 1.0
				}
				EffortMeasure {
					name = Effort
					weight = 0.1
					measure_type = Wang2012
					use_cost_of_transport = 1
				}
				CompositeMeasure {
					name = DofLimits
					symmetric = 1
					DofMeasure {
						weight = 0.1
						dof = ankle_angle
						position { min = -60 max = 60 squared_penalty = 1 }
					}
					DofMeasure {
						weight = 0.01
						threshold = 5
						dof = knee_angle
						force { min = 0 max = 0 abs_penalty = 1 }
					}
				}
			}
			ScriptMeasure {
				name = HipActuatorMeasure
				minimize = 0
				weight = 1
				script_file = "measures/hip_actuator_measure.lua"
			}
			ScriptMeasure {
				name = BodyMove
				minimize = 1
				weight = 10
				script_file = "measures/torso_measure.lua"
			}
			DofMeasure {
				dof = pelvis_tilt
				position { min = -10 max = +10 abs_penalty = +10 }
			}
		}
	}
}
